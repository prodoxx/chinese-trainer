// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Auth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  password          String?   // For email/password auth
  isActive          Boolean   @default(true)
  role              String    @default("user")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  accounts          Account[]
  sessions          Session[]
  profile           UserProfile?
  settings          UserSettings?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// App-specific models
model UserProfile {
  id               String   @id @default(cuid())
  userId           String   @unique
  bio              String?
  preferredLanguage String  @default("en")
  studyGoal        String?  // e.g., "HSK 3", "Business Chinese"
  dailyGoal        Int     @default(10) // Cards per day
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSettings {
  id                    String   @id @default(cuid())
  userId                String   @unique
  reduceMotion          Boolean  @default(false)
  brightness            Float    @default(1.0)
  audioEnabled          Boolean  @default(true)
  autoplayAudio         Boolean  @default(true)
  fontSize              String   @default("medium") // small, medium, large
  theme                 String   @default("dark") // light, dark, auto
  emailNotifications    Boolean  @default(true)
  reviewReminders       Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
